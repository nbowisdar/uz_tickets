services:
  bot:
    build:
      context: .
    env_file:
      - .env
    volumes:
      - ./bot:/app/bot
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=bot
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 10s
      retries: 10

  redis:
    image: redis
    restart: always
    expose:
      - 6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  db-data:
  redis-data:

secrets:
  db-password:
    file: db/password.txt
